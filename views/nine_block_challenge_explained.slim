doctype html
html language="en"
  head
    meta charset="utf-8"
    meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"
    link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css" integrity="sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb" crossorigin="anonymous"
    link rel="stylesheet" href="./stylesheets/main.css"
    title Corinne Henk | Mission Bit

  body
    == slim :header
    div.spacer
    div.section
      div.left
        h3 The 9 Blocks Challenge: Explained
        br
        div.details
          | The&nbsp;
          a.text-orange href="https://github.com/bennlich/missionbit/tree/master/9-blocks-challenge" target="_blank" 9 Blocks Challenge
          | &nbsp;is one of the first activities we assign students in Mission Bit's Web Development 101 class. Using CSS and HTML, students are asked to create a 3x3 grid that resembles Example 1.
          br
          br
          | First, let's create a &lt;div&gt; to contain our nine blocks. Remember, a div element that doesn't contain any text will be invisible on the web page unless we use some CSS to give it height, width, and a background color.
          br
          br
          br
          | Read the code snippet below and imagine what the code will look like when displayed on the screen. Then, click anywhere in the gray snippet to see the result.
      div.right
        div.spacer
        div.nine-block
          div.my-row
            div.square.red
            div.square.orange
            div.square.red
          div.my-row
            div.square.orange
            div.square.red
            div.square.orange
          div.my-row
            div.square.red
            div.square.orange
            div.square.red
          div.subtext Example 1: Desired end result
          br
    div.section
      div.left
        div.details
          a.snippet onclick="showEndResult('example-1')"
            pre.gray-background
              code
                |
                  // html
                  &lt;div class="container"&gt;
                    // we will nest everything in here
                  &lt;div&gt;

                  // css
                  .container {
                    background-color: gray;
                    height: 300px;
                    width: 300px;
                  }
          div.subtext.align-right Click the snippet to see the result
          br
          br
          | This gray square will be the base of our 3x3 grid. You can think of it like frosting a cake. We have the base layer of our cake, but now we need to add the first layer of frosting. Because of how divs display by default, it would be hard to finish this task with a single layer of frosting composed of 9 squares. Instead, an easier strategy will be to add a base layer of frosting that is made up of three rows.
          br
          br
          | In order to achieve the layering, we will need to nest three "row" divs inside of the container div. Let's also change the background-color of each of these row divs so that we can visually see where each row ends and the next begins.
      div.right
        div.hidden id="example-1"

    div.section
      div.left
        div.details
          br
          a.snippet onclick="showEndResult('example-2')"
            pre.gray-background
              code
                | 
                  // html
                  &lt;div class="container"&gt;
                    &lt;div class="row-1"&gt;
                    &lt;/div&gt;
                    &lt;div class="row-2"&gt;
                    &lt;/div&gt;
                    &lt;div class="row-3"&gt;
                    &lt;/div&gt;
                  &lt;div&gt;

                  // css
                  // container css code from above

                  .row1 {
                    height: 33.333%;
                    background-color: orange;
                  }
                  .row2 {
                    height: 33.333%;
                    background-color: blue;
                  }
                  .row3 {
                    height: 33.333%
                    background-color: green;
                  }
          div.subtext.align-right Click the snippet to see the result
      div.right
        div.larger-spacer
        div.hidden id="example-2"
          div.row1
          div.row2
          div.row3

    div.section
      div.left
        div.details
          br
          | In the CSS, notice that I've made the height of each row 33.333%. This means that each row will take up one-third the height of the parent element, namely the container &lt;div&gt;. Or, in cake terms, each row of frosting will cover one-third of the cake.
          br
          br
          | Now for the tricky part. Within each row, we want to subdivide into three equal squares. To do this, we will need to nest three more elements in each row. We will also need to make these divs have a special display value, namely, inline-block.

          br
          |For simplicity's sake, let's just handle the squares in row 1 for now.
          br
          br
          a.snippet onclick="showEndResult('example-3')" onmouseover="showTip()"
            pre.gray-background
              code
                | 
                  // html
                  &lt;div class="container"&gt;
                    &lt;div class="row-1"&gt;
                      &lt;div class="square-1"&gt;&lt;/div&gt;
                      &lt;div class="square-2"&gt;&lt;/div&gt;
                      &lt;div class="square-3"&gt;&lt;/div&gt;
                    &lt;/div&gt;
                    &lt;div class="row-2"&gt;
                    &lt;/div&gt;
                    &lt;div class="row-3"&gt;
                    &lt;/div&gt;
                  &lt;div&gt;

                  // css
                  // container css code from above

                  .row1 {
                    height: 33.333%;
                    background-color: orange;
                  }
                  .row2 {
                    height: 33.333%;
                    background-color: blue;
                  }
                  .row3 {
                    height: 33.333%
                    background-color: green;
                  }
                  .square-1 {
                    width: 100%;
                    height: 33.333%;
                    background-color: red;
                    display: inline-block;
                  }

                  .square-2 {
                    height: 100%;
                    width: 33.333%;
                    background-color: yellow;
                    display: inline-block;
                  }

                  .square-3 {
                    height: 100%;
                    width: 33.333%;
                    background-color: indigo;
                    display: inline-block;
                  }
          div.subtext.align-right Click the snippet to see the result
      div.right
        div.larger-spacer
        div.larger-spacer
        div.larger-spacer
        div.larger-spacer
        div.hidden id="example-3"
          div.row1
            span.square-1
            span.square-2
            span.square-3
          div.row2
          div.row3
    div.section
      div.left
        div.details
          br
          | What's with "display: inline-block"? By default, divs are block level elements, which means that they want to take up the entire line. In order to get three boxes to appear side-by-side rather than one on top of the other, we need to change the display to "inline-block."
          br
          br
          | Using the code in the last snippet, try to finish up the 9-Blocks Challenge on your own!
          br
          br
          | If that was a snap and you want an additional challenge, here are some ideas:
          br
          br
          | 1. Try making a 3x3 grid out of images instead of color blocks.
          br
          | 2. For an even harder challenge, try making a 3x3 grid out of square words instead of colors.
          br

      div.right
        div.spacer
    div.section
      div.spacer
      div.spacer
        div.nine-block.white.inline
          div.row-text
            div.square-text Hi
            div.square-text Hi
            div.square-text Hi
          div.row-text
            div.square-text Hi
            div.square-text Hi
            div.square-text Hi
          div.row-text
            div.square-text Hi
            div.square-text Hi
            div.square-text Hi
        div.nine-block.inline
          div.my-row
            img.square src="/assets/img/bikeandbuild.png"
            img.square src="/assets/img/bikeandbuild.png"
            img.square src="/assets/img/bikeandbuild.png"
          div.my-row
            img.square src="/assets/img/bikeandbuild.png"
            img.square src="/assets/img/bikeandbuild.png"
            img.square src="/assets/img/bikeandbuild.png"
          div.my-row
            img.square src="/assets/img/bikeandbuild.png"
            img.square src="/assets/img/bikeandbuild.png"
            img.square src="/assets/img/bikeandbuild.png"
    div.spacer
    div.spacer


javascript:

  function showEndResult(id) {
    var element = document.getElementById(id);
    element.classList.add('nine-block');
    element.classList.remove('hidden')
  }
